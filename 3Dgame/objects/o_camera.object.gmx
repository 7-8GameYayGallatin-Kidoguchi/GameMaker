<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_playercol</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z=64;

dir_face=0;
length=192;

target_x=o_player.x+lengthdir_x(length,dir_face);
target_y=o_player.y+lengthdir_y(length,dir_face);

cameramode=0;
    // 0 - free camera
    // 1 - follow camera
    // 2 - targetting camera
targetobj=o_player;


d3d_start();
d3d_set_fog(true,c_white,512,4096); //Purple : make_color_rgb(27,3,59)
d3d_set_hidden(true);

draw_set_alpha_test(true);
draw_set_alpha_test_ref_value(40);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !control.pause {

//Distance in 3D space formula
// d=√((x1−x0)^2+(y1−y0)^2+(z1−z0)^2)

    if control.controltype!=-1{
        dir_face-=gamepad_button_value(control.controltype,gp_shoulderrb)*2;
        dir_face+=gamepad_button_value(control.controltype,gp_shoulderlb)*2;
    }
    else{
        if keyboard_check(vk_space) cameramode=2
        else if o_player.movedir!=-1 cameramode=1
        else cameramode=0
        
        if cameramode==0{ //Free camera, freely move camera
            if keyboard_check(ord('E')) dir_face-=2;
            if keyboard_check(ord('Q')) dir_face+=2;
            
            if keyboard_check(ord('R')) z+=2;
            if keyboard_check(ord('F')) z-=2;
            z=clamp(z,4,128);
        }
        else if cameramode==1{ //Follow camera, follows player
            if keyboard_check(ord('D')) dir_face-=1.5;
            if keyboard_check(ord('A')) dir_face+=1.5;
        }
        else if cameramode==2{ //Target camera, targets direction or enemy
        
        
        }
    }
    
if (dir_face&lt;0) dir_face=359;
dir_face= dir_face%360;

if collision_line(o_player.x,o_player.y,o_player.x+lengthdir_x(length,dir_face),o_player.y+lengthdir_y(length,dir_face),parent_wall,false,true) and z&lt;=64{
    show_debug_message("solid");
    var testlength=192;
    while (collision_line(o_player.x,o_player.y,o_player.x+lengthdir_x(testlength,dir_face),o_player.y+lengthdir_y(testlength,dir_face),parent_wall,false,true)){
        testlength--;
        if testlength&lt;0{show_debug_message("infinite loop"); testlength=192; break; }
    }
    target_x = o_player.x+lengthdir_x(testlength-4,dir_face);
    target_y = o_player.y+lengthdir_y(testlength-4,dir_face);
}
else{
    target_x = o_player.x+lengthdir_x(length,dir_face);
    target_y = o_player.y+lengthdir_y(length,dir_face);
}

}

x=lerp(x,target_x,.25);
y=lerp(y,target_y,.25);

if place_meeting(x,y,parent_wall){
    with instance_nearest(x,y,parent_wall) { transp=0; }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_alpha(1);
d3d_set_projection(x,y,z+o_player.z, o_player.x,o_player.y,o_player.z+32, 0,0,1);
draw_set_color(c_red);
draw_triangle(o_player.x,o_player.y,lengthdir_x(view_wview[view_current]/2,dir_face+90),lengthdir_y(view_wview[view_current]/2,dir_face+90),lengthdir_x(view_wview[view_current]/2,dir_face+450),lengthdir_y(view_wview[view_current]/2,dir_face+450),true);
draw_set_color(c_white);

d3d_set_fog(0,0,0,0);
d3d_draw_cylinder((room_width/2)+12000,(room_height/2)+12000,12000,(room_width/2)-12000,(room_height/2)-12000,-12000,background_get_texture(bg_skyred),3,1,false,24);
//draw_set_color(make_color_rgb(132,24,57));
//d3d_draw_floor((room_width/2)+12000,(room_height/2)+12000,12000,(room_width/2)-12000,(room_height/2)-12000,12000,-1,1,1);
draw_set_color(c_white);
d3d_set_fog(true,c_white,512,4096);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
